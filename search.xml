<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Java的数据类型</title>
    <url>/2021/02/22/Java%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
    <content><![CDATA[<p><img src="https://p9.qhimg.com/bdm/1280_800_85/t01b7aab4ac9d0afe81.jpg" alt="封面"></p>
<h1 id="Java-的数据类型"><a href="#Java-的数据类型" class="headerlink" title="Java 的数据类型"></a>Java 的数据类型</h1><h2 id="Java-数据类型在JVM中的分布"><a href="#Java-数据类型在JVM中的分布" class="headerlink" title="Java 数据类型在JVM中的分布"></a>Java 数据类型在JVM中的分布</h2><blockquote>
<p>JVM 数据在内存中的分布大致分为：堆区，栈区，方法区</p>
</blockquote>
<ul>
<li><p>Java 数据，变量大多数存放在堆栈中。</p>
<ul>
<li><p>其中，栈区主要存放局部变量，对象声明的引用等。</p>
</li>
<li><p>堆区主要存放 new 关键字创建的类（包含成员变量）和数组等.</p>
</li>
</ul>
</li>
<li><p>方法区则主要储存被JVM加载过的类信息，常量，以及编译过的代码片段等。</p>
</li>
</ul>
<blockquote>
<p>堆与栈的优缺点</p>
</blockquote>
<ul>
<li>栈的优点：栈数据可以共享，存取速度比堆快。<ul>
<li>缺点是：存在栈中数据大小与生命周期是确定的。</li>
</ul>
</li>
<li>堆的优点：可以动态分配内存大小，生存期也不必事先告诉编译器。<ul>
<li>缺点是：存取速度较慢。</li>
</ul>
</li>
</ul>
<h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>Java 的数据类型主要包括：基本数据类型和引用数据类型。</p>
<blockquote>
<p>基本数据类型  </p>
</blockquote>
<table>
<thead>
<tr>
<th>数据类型</th>
<th>字节</th>
<th>默认值</th>
<th>表达范围</th>
<th>封装类</th>
</tr>
</thead>
<tbody><tr>
<td>byte（字节型）</td>
<td>1</td>
<td>0</td>
<td>-128~127</td>
<td>Byte</td>
</tr>
<tr>
<td>short（短整型）</td>
<td>2</td>
<td>0</td>
<td>-32768～32767</td>
<td>Short</td>
</tr>
<tr>
<td>int（整形）</td>
<td>4</td>
<td>0</td>
<td>-2147483648～2147483647</td>
<td>Integer</td>
</tr>
<tr>
<td>long（长整型）</td>
<td>8</td>
<td>0L</td>
<td>-9223372036854775808 ~ 9223372036854775807</td>
<td>Long</td>
</tr>
<tr>
<td>float（单精度浮点型）</td>
<td>4</td>
<td>0.0F</td>
<td>-3.4E38～3.4E38</td>
<td>Float</td>
</tr>
<tr>
<td>double（双精度浮点型）</td>
<td>8</td>
<td>0.0</td>
<td>-1.7E308～1.7E308</td>
<td>Double</td>
</tr>
<tr>
<td>boolean（布尔型）</td>
<td>1</td>
<td>false</td>
<td>true或false</td>
<td>Boolean</td>
</tr>
<tr>
<td>char（字符型）</td>
<td>2</td>
<td>‘\u0000’</td>
<td>从字符型对应的整型数来划分，其表示范围是0～65535</td>
<td>Charater</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<blockquote>
<p>引用数据类型</p>
</blockquote>
<ul>
<li><p>Java 中的引用数据类型建立在基本数据类型的基础上，包括数组、类和接口。</p>
</li>
<li><p>需要注意的是，Java 语言中不支持 C++ 中的指针类型（*）、结构类型（struct）、联合类型（union）和枚举类型（enum）。</p>
</li>
<li><p>通俗意义上来讲，引用数据类型，是对于实例、数组对象地址的引用。实际上引用数据类型就是一个指针，只是 Java 语言中不再使用指针这个说法。</p>
</li>
<li><p>引用类型还有一种特殊的空类型(null type)，这种类型没有名字，所以无法声明或转换成一个null类型的变量。注：空类型只针对于引用类型。</p>
</li>
</ul>
<h2 id="参见"><a href="#参见" class="headerlink" title="参见"></a>参见</h2><ul>
<li><a href="https://blog.csdn.net/weixin_36431280/article/details/78430786">基本数据类型</a></li>
<li><a href="http://c.biancheng.net/view/5672.html">引用数据类型</a></li>
</ul>
]]></content>
      <categories>
        <category>日常学习</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo搭建博客汇总</title>
    <url>/2021/02/12/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%B1%87%E6%80%BB/</url>
    <content><![CDATA[<p><img src="https://browser9.qhimg.com/bdm/1280_800_85/t01a5211bae6d28520e.jpg" alt="封面"></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><blockquote>
<p>一台普通而又及其正常的电脑/笔记本</p>
</blockquote>
<ul>
<li> git 工具</li>
<li> node.js 工具</li>
<li> hexo 博客框架</li>
<li> github 账号</li>
<li> 掌握 markdown 基本语法  </li>
</ul>
<blockquote>
<p>一颗积极好学，坚持不懈的心❤️  </p>
</blockquote>
<h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><blockquote>
<p>下载安装 git 工具</p>
</blockquote>
<ul>
<li>git<br>  git 是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理工具</li>
<li>git官网：<a href="https://git-scm.com/download/win/">Download git</a></li>
<li>git安装教程：<a href="https://www.jianshu.com/p/414ccd423efc/">Installation git</a></li>
<li>注意：选择适合当前系统的 git 工具进行下载安装  </li>
</ul>
<blockquote>
<p>下载安装 node.js 运行环境</p>
</blockquote>
<ul>
<li>nodejs<br>  是一个基于Chrome V8引擎的 JavaScript 运行环境</li>
<li>node.js官网：<a href="https://nodejs.org/zh-cn/download/">Download node.js</a></li>
<li>node.js安装教程：<a href="https://www.cnblogs.com/zhouyu2017/p/6485265.html/">Installation node.js</a></li>
<li>注意：选择长期支持版 LTS 进行下载安装  </li>
</ul>
<blockquote>
<p>安装hexo框架</p>
</blockquote>
<ul>
<li>由于国外的 npm 源不稳定，需要更换到淘宝源下载 hexo<br>  打开控制台输入如下命令  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm config set registry https:&#x2F;&#x2F;registry.npm.taobao.org npm info underscore</span><br></pre></td></tr></table></figure>
  换源后，所有教程中的关于 npm 语句都可以替换成 cnpm</li>
<li>安装 hexo 框架<br>  打开控制台输入如下命令  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
  完成 hexo 框架的安装  </li>
</ul>
<blockquote>
<p>测试 hexo 环境</p>
</blockquote>
<ul>
<li>初始化 hexo<br>  新建一个空路径，例如 D:\blog 路径<br>  进入控制台并切换到该路径，输入如下命令  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo init     # 创建 hexo 工程</span><br></pre></td></tr></table></figure>
  之后你关于博客的所有操作都在此目录<br>  倘若出现失误/失控，直接删除该目录重新建一个空目录就好</li>
<li>新建一篇文章<br>  打开控制台，进入你的博客路径，输入如下命令  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo new helloworld   #新建一篇名为 helloworld 的文章</span><br></pre></td></tr></table></figure>
  helloworld 为你新建文章的名字</li>
<li>运行<br>  打开控制台，进入你的博客路径，输入如下命令  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo clean    # 清除缓存</span><br><span class="line">$ hexo generate # 生成静态文件，静态文件保存在 博客路径的 public 文件夹中</span><br><span class="line">$ hexo server   # 运行 hexo 服务器</span><br></pre></td></tr></table></figure>
  clean generate server等可以尝试使用首字母代替</li>
<li>测试<br>  打开浏览器，在地址栏输入 localhost:4000<br>  如果网页成功打开，并且出现之前新建的文章，则环境搭建成功<br>  若无法打开，则搭建失败，重新来过即可</li>
<li>使用 Ctrl+C 组合键退出 hexo 服务器  </li>
</ul>
<h2 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h2><blockquote>
<p>markdown</p>
</blockquote>
<ul>
<li>markdown：是一种轻量级标记语言，它兼容HTML语句，并且允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML（或者HTML）文档</li>
<li>对于以前重来没写过博客的人来说（比如我），这种语法并不容易记忆掌握，只能多看多学多写 —— <a href="https://www.jianshu.com/p/335db5716248">markdown 教程</a></li>
<li>markdown编辑器：我感觉VScode就挺好用，写代码什么的各种文件的格式都支持</li>
</ul>
<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><blockquote>
<p>准备  </p>
</blockquote>
<ul>
<li>打开并登录 github </li>
<li>新建一个和你用户名相同的仓库，仓库名后面加 .github.io ，这样部署到 github page 时，才会被 github 识别</li>
<li>复制仓库的网址</li>
<li>以记事本方式打开你的博客路径根目录下的 _config.yml 文件，滑倒最下面，将内容增加修改为：  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">    type: &#39;git&#39;</span><br><span class="line">    repository: &#39;warehouse add&#39;</span><br><span class="line">    branch: &#39;master&#39;</span><br></pre></td></tr></table></figure>
  warehouse add 处填写刚刚复制的仓库地址  </li>
</ul>
<blockquote>
<p>设置 git 账户信息</p>
</blockquote>
<ul>
<li>打开控制台，输入如下命令  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name &quot;yourname&quot;</span><br><span class="line">$ git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure>
  yourname 最好为 github 账号名<br>  youremail 最好为 github 绑定邮箱  </li>
</ul>
<blockquote>
<p>安装 deploy 插件</p>
</blockquote>
<ul>
<li>打开控制台，输入如下命令  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
  即可成功安装deploy插件  </li>
</ul>
<blockquote>
<p>部署到 github page</p>
</blockquote>
<ul>
<li>打开控制台，进入你的博客路径，输入如下命令  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo clean    # 清除缓存</span><br><span class="line">$ hexo generate # 生成静态文件，静态文件保存在 博客路径的 public 文件夹中</span><br><span class="line">$ hexo deploy   # 将生成的静态文件部署到 github page</span><br></pre></td></tr></table></figure>
  clean generate deploy 可以尝试使用首字母代替  </li>
<li>注意：当hexo d命令，出现 <code>Not Found Deployer!</code> 时<br>  打开控制台，进入你的博客路径，输入如下命令  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure>
  重新尝试则可成功</li>
<li>注意，由于国内 github 的访问并不稳定，所以尽量减少 hexo deplyer 的次数  </li>
</ul>
<blockquote>
<p>测试  </p>
</blockquote>
<ul>
<li>过一两分钟，打开浏览器，输入 <code>http://yourname.github.io</code> 并进入网页  </li>
<li>yourname 为你的 github 账号名  </li>
<li>如果出现你之前测试 hexo 环境时出现的网页，则部署成功  </li>
<li>若是无法打开，则部署失败，重新来过即可  </li>
</ul>
<h2 id="美化"><a href="#美化" class="headerlink" title="美化"></a>美化</h2><blockquote>
<p>安装主题</p>
</blockquote>
<ul>
<li>Code<br>  打开控制台，进入你的博客路径，输入如下命令  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git clone 目标主题路径 目标目录</span><br></pre></td></tr></table></figure>
  目标目录一般为 <code>/theme/主题名</code><br>  如果确实不知道如何安装主题，可以参考yilia主题的安装方法  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git clone https:&#x2F;&#x2F;github.com&#x2F;litten&#x2F;hexo-theme-yilia.git themes&#x2F;yilia</span><br></pre></td></tr></table></figure>
  参考：<a href="https://github.com/litten/hexo-theme-yilia/">Github yilia</a>  </li>
<li>方法<br>  打开博客根目录下的 _config.yml 文件，将 theme: 后面更改为想要使用的主题名。</li>
<li>注意<br>  在修改主题的同时，注意每个冒号后面都需要一个空格 —— 语法规范！  </li>
</ul>
<blockquote>
<p><a href="https://hexo.io/themes/">常用官方主题</a>  </p>
</blockquote>
<ul>
<li>最最常用，也是常见的 hexo 主题，有早年间的 yilia ，近年的 nexT ，这两个主题的相关优化教程也相对较多</li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul>
<li>此搭建博客的汇总综合多处教程，为小白用户简单介绍了搭建个人博客的步骤</li>
<li>如有不顺利的地方可以在评论区留言，我看见了便会尽力去解答</li>
</ul>
<hr>
<h2 id="推荐"><a href="#推荐" class="headerlink" title="推荐"></a>推荐</h2><ul>
<li>此处推荐一位大神级别的任务 <a href="https://blog.bestzuo.cn/">Sanarous</a> ，他的站点现在所用的主题就是由next魔改的，大家可以学习借鉴一下大神的作品~  </li>
<li>附上大神做的 <a href="https://blog.bestzuo.cn/posts/blog-establish.html">next 主题美化教程</a></li>
<li>(虽然有点不好意思，但还是要说一句，咱现在用的主题也是next呢~！)</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>日常学习</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
</search>
